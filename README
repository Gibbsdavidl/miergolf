The maximum influnce problem using diffusion models on directed graphs, subset solution by ant optimization.
-------------------------------------------------------------------------------------------------------------
Author: David L Gibbs
-------------------------------------------------------------------------------------------------------------

This software has been reimplemented in python, to take advantage of the sparse matrix libraries.

To run this program:  python main.py config1.txt graphfile.txt

See the test dir for example files, but...
The config file must look like:

----------------------------
number of restarts : 1
number of ants     : 10
converge threshold : 0.001
local optimization : 0
evaporation rate   : 0.3
dampening          : 0.7
alpha              : 1.0
beta               : 1.0
transmit threshold : 0.2
receive threshold  : 0.2
random seed        : Random
k                  : 1


The graph file must look like:
(from) [tab] (to) [tab] (weight)

a	i	0.5
b	i	0.5
c	i	0.5
d	i	0.5
i	j	0.99
j	e	0.5
j	f	0.5
j	g	0.5
j	h	0.5
h	r	0.5
k	r	0.5
l	r	0.5
m	r	0.5
r	s	0.99
s	n	0.5
s	o	0.5
s	p	0.5
s	q	0.5



-------------------------------------------------------------------------------------------------------------

If you would like to run the Haskell version of this software,
first, go to www.haskell.org/platform and install Haskell.

Then use cabal to intall the necessary libraries.
And make sure you have an optimized LAPACK library like libatlas-base.

    cabal install hmatrix

Then, to compile, use The Glasgow Haskell Compiler (www.haskell.org/ghc).

    ghc --make -O2 Main

Lastly, to run the program:

    ./Main config.txt graph.txt


See the test dir for example files, but...
The config file must look like:

# configuration for test graph 2
number of restarts : 1
number of ants     : 10
converge threshold : 0.001
local optimization : 0
evaporation rate   : 0.3
dampening          : 0.7
alpha              : 1.0
beta               : 1.0
transmit threshold : 0.2
receive threshold  : 0.2
random seed        : Random
k                  : 1


The graph file must look like:
(from) [tab] (to) [tab] (weight)

a	i	0.5
b	i	0.5
c	i	0.5
d	i	0.5
i	j	0.99
j	e	0.5
j	f	0.5
j	g	0.5
j	h	0.5
h	r	0.5
k	r	0.5
l	r	0.5
m	r	0.5
r	s	0.99
s	n	0.5
s	o	0.5
s	p	0.5
s	q	0.5



